[user]
name = Seth Silesky
email = seth.silesky@gmail.com
[alias]
get-branches = "!sh -c ~/scripts/get-all-branches.sh"
# find the merge where a commit entered a branch
find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
# show which remote the current branch is tracking
show-tracking = rev-parse --symbolic-full-name --abbrev-ref @{u}
# list recent branches that we've switched to (old -> new)
recent = !git reflog | egrep -io 'moving from ([^[:space:]]+)' | awk '{ print $3 }' | awk ' !x[$0]++' | head -n15 | tail
# list files that changed in the last 10 commits of the branch
changed = !git whatchanged -n 100 | grep -v 'Seth Silesky <seth.silesky@gmail.com>' | grep -v date | grep -v commit | grep -o '[M\\|A][[:space:]].*' | awk '{print $NF}' | uniq | head
# list all conflicted files in diff
conflict = grep '<<<<<<< HEAD'
# list my latest commits
standup = log --graph --author='Seth Silesky' --no-merges
# search commit message, file
grep = log --all --oneline --name-status --grep
# skip files in  worktree
ignore = update-index --skip-worktree
# show top committers
leaderboard = shortlog -sn --all --no-merges
# don't skip files in worktree
unignore = update-index --no-skip-worktree
# list skip-worktree files
ignored = !git ls-files -t | grep '^S'
b = branch
c = commit
cm = commit -m
cnv = commit --no-verify
cnvm = commit --no-verify -m
d = diff --stat
diffmaster = !git diff $(git merge-base --fork-point master) -- . ':(exclude)package-lock.json'
ds = diff --staged
dt = difftool
dts = difftool --staged
dd = !git diff && echo "________________STAGED_______________________" && git diff --staged
co = checkout
clear = reset -- . && git checkout -- .
back = checkout HEAD~1
fwd = "!sh -c git checkout $(git rev-list --topo-order HEAD..\"$*\" | tail -1)"
l = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
me=!git l --author='Seth Silesky'
m = merge
r = reset
rb = rebase
s = status
st = stash
stp = stash pop
cp-last-commit = !git log -n 1 --pretty=format:"%H" | pbcopy
[filter "lfs"]
clean = git lfs clean %f
smudge = git lfs smudge %f
required = true
[core]
excludesfile = /Users/seth.silesky/.gitignore_global
autocrlf = input
editor = vim
pager = less -F -X
[color]
branch = always
status = always
ui = always
diff = always
[diff "color"]
	old = red strike
[push]
default = upstream
[rebase]
autosquash = true
[log]
# decorate = full
[commit]
template = /Users/me/.stCommitMsg

# https://medium.com/faun/using-vscode-as-git-mergetool-and-difftool-2e241123abe7
[merge]
    tool = vscode
[mergetool "vscode"]
    cmd = code --wait $MERGED
[diff]
    tool = vscode
[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE
#####

[url "git@github.com:"]
	insteadOf = https://github.com/
[merge "npm-merge-driver"]
name = automatically merge npm lockfiles
driver = npx npm-merge-driver merge %A %O %B %P
[difftool]
prompt = false
