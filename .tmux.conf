# panes
set -g pane-border-fg black
set -g pane-active-border-fg brightred

## Status bar design
# status line
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

# messaging
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

#window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none


# The modes {
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour196
setw -g mode-bg colour238

# }
# The panes {

set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51

# }
# The statusbar {

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %m/%d/%y #[fg=colour233,bg=colour245,bold] %I:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1

# }
# The messages {

set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166

# }
### .tmux.conf
# http://unix.stackexchange.com/questions/118806/tmux-term-and-256-colours-support
set -g default-terminal "screen-256color" #osx

## Status bar ............................#
set-option -g set-titles on
# bind to a
unbind C-b
set -g prefix C-a
bind C-a send-prefix
# split to same directory
bind '"' split-window -d -c "#{pane_current_path}"
bind % split-window -h -d -c "#{pane_current_path}"

# no escape delay
set -sg escape-time 0

# Start copy mode when scrolling up and exit when scrolling down to bottom.
# http://apple.stackexchange.com/questions/218553/iterm-tmux-isnt-allowing-me-to-scroll-up-with-the-mouse
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'" #osx
bind -n WheelDownPane select-pane -t= \; send-keys -M #osx
set -g mouse on
bind-key -n M-PPage copy-mode -u
# .... tmux plugins
# List of plugins
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
#   install by hitting prefix + I to fetch the plugin and source it.

########################
#   BETTER MOUSE MODE  #
########################

set -g @scroll-speed-num-lines-per-scroll 0.5 #fix super fast mouse scrolling
set -g @scroll-without-changing-pane on #don't need to actually select a pane to scroll
##############
#   COPYCAT  #
##############
# prefix + / - regex search (strings work too)
# Example search entries:
#
# foo - searches for string foo
# [0-9]+ - regex search for numbers
# Grep is used for searching.
# Searches are case insensitive.
#
# Predefined searches
#
# prefix + ctrl-f - simple file search
# prefix + ctrl-g - jumping over git status files (best used after git status command)
# prefix + alt-h - jumping over SHA-1 hashes (best used after git log command)
# prefix + ctrl-u - url search (http, ftp and git urls)
# prefix + ctrl-d - number search (mnemonic d, as digit)
# prefix + alt-i - ip address search
#
#.....................#
#######################
set-option -g history-limit 3000

# when i hit ctrl-b + arrow, I don't want to accidentally switch to another pane
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# faster resize with ctrl shift up
bind-key -n C-S-Up resize-pane -U 2
bind-key -n C-S-Down resize-pane -D 2
bind-key -n C-S-Left resize-pane -L 2
bind-key -n C-S-Right resize-pane -R 2
# no confirmation on kill pane
# http://unix.stackexchange.com/questions/30270/tmux-disable-confirmation-prompt-on-kill-window
bind-key x kill-pane
bind-key & kill-window

########################################
########## Vim Tmux Navigator ##########
########################################
# See: https://github.com/christoomey/vim-tmux-navigato
# install:
# add to vimrc--> Plugin 'christoomey/vim-tmux-navigator'
# clone to .vim/bundle--> git@github.com:christoomey/vim-tmux-navigator.git
# :PluginInstall
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
unbind ^A # quick pane cycling
bind ^A select-pane -t :.+
set -g pane-base-index 1 #start pane at 1
set -g base-index 1
bind-key -n C-q display-panes #ctrl-q to see pane numbers
#.....................................
######################################
# Clipboard fixes:
# ... linux
# https://sanctum.geek.nz/arabesque/vi-mode-in-tmux/
# copy and paste with y and vi in copy mode
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection

# tmux copy mode uses system clipboard
# http://unix.stackexchange.com/questions/131011/use-system-clipboard-in-vi-copy-mode-in-tmux
# bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard' # linx only

# .... osx
# https://evertpot.com/osx-tmux-vim-copy-paste-clipboard/
# INSTALL:
# brew install reattach-to-user-namespace

# Fix LSOpenURLsWithRole() error on OS X. Requires reattach-to-user-namespace
# Copy-paste integration
#osx only
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
# Use vim keybindings in copy mode

setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
# Update default binding of `Enter` to also use copy-pipe

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer" #osx
##############################

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
