### .tmux.conf


# http://unix.stackexchange.com/questions/118806/tmux-term-and-256-colours-support
set -g default-terminal "screen-256color"
#set inactive/active window styles
# set -g window-style 'fg=colour248,bg=colour236'
# set -g window-active-style 'fg=colour250,bg=black'
# # set the pane border colors
# set -g pane-border-fg colour250
# set -g pane-border-bg colour236
# pallet http://i.stack.imgur.com/e63et.png
# black, red, green, yellow, blue, magenta, cyan, white, colour0
# colour2 =bright green
# colour7 =light grey
# set -g pane-active-border-bg colour2
# set -g pane-active-border-fg colour2
set -g status-bg black
set -g status-fg black


set-option -g default-shell /bin/zsh #set default shell
# Automatically set window title
# https://gist.github.com/spicycode/1229612
set-window-option -g automatic-rename on
set-option -g set-titles on
# bind to a
unbind C-b
set -g prefix C-a
bind C-a send-prefix
# split to same directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
#set inactive/active window styles
# http://stackoverflow.com/questions/25532773/change-background-color-of-active-or-inactive-pane-in-tmux


# Start copy mode when scrolling up and exit when scrolling down to bottom.
# The "#{mouse_any_flag}" check just sends scrolls to any program running that
# has mouse support (like vim).
bind -n WheelUpPane copy-mode
set -g mouse on
# don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim
set -sg escape-time 0

# .... tmux plugins
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# when i hit ctrl-b + arrow, I don't want to accidentally switch to another pane
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."


# use alt to switch panes
# https://gist.github.com/spicycode/1229613
 bind -n M-Left select-pane -L
 bind -n M-Right select-pane -R
 bind -n M-Up select-pane -U
 bind -n M-Down select-pane -D
# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
# faster resize with ctrl shift up
bind-key -n C-S-Up resize-pane -U 15
bind-key -n C-S-Down resize-pane -D 15
bind-key -n C-S-Left resize-pane -L 25
bind-key -n C-S-Right resize-pane -R 25
# no confirmation on kill pane
# http://unix.stackexchange.com/questions/30270/tmux-disable-confirmation-prompt-on-kill-window
bind-key x kill-pane
bind-key & kill-window

########################################
########## Vim Tmux Navigator ##########
########################################
# See: https://github.com/christoomey/vim-tmux-navigato
# install:
# add to vimrc--> Plugin 'christoomey/vim-tmux-navigator'
# clone to .vim/bundle--> git@github.com:christoomey/vim-tmux-navigator.git
# :PluginInstall
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l' # clear fix
unbind ^A # quick pane cycling
bind ^A select-pane -t :.+
#.....................................
######################################

# Clipboard fixes:
# ... linux
# https://sanctum.geek.nz/arabesque/vi-mode-in-tmux/
# copy and paste with y and vi in copy mode
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection

# tmux copy mode uses system clipboard
# http://unix.stackexchange.com/questions/131011/use-system-clipboard-in-vi-copy-mode-in-tmux
# bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard' # linx only

# .... osx
# https://evertpot.com/osx-tmux-vim-copy-paste-clipboard/
# brew install reattach-to-user-namespace

# Copy-paste integration
 set-option -g default-command "reattach-to-user-namespace -l zsh"

# Use vim keybindings in copy mode
 setw -g mode-keys vi #won't work without it

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
##############################
